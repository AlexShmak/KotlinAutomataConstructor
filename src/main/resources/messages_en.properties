MainView.File = File
MainView.Edit = Edit
MainView.Help = Help
MainView.File.New = New
MainView.File.Open = Open
MainView.File.Save = Save
MainView.File.SaveAs = Save As
MainView.Edit.Undo = Undo
MainView.Edit.Redo = Redo
MainView.Help.UserDocumentation = User Documentation
MainView.Help.README = README

StateView.State = State
StateView.StateName = Name
StateView.InitialState = Initial
StateView.FinalState = Final

TransitionView.Transition = Transition
TransitionView.Source = Source
TransitionView.Target = Target

AutomatonView.Pane.Problems = Problems{0}

MemoryView.InputDataView = Input data

ExecutionStateTooltip.NotShownExecutionStates = {0, number, integer} execution states not shown
ExecutorView.Stop = Stop
ExecutorView.Run = Run
ExecutorViewUtils.Frozen = Frozen

AutomatonGraphController.AddState = Add state

OpenedAutomatonController.UntitledAutomaton = Untitled {0}
OpenedAutomatonController.SelectAutomatonType = Select automaton type
OpenedAutomatonController.NewAutomaton = New automaton
OpenedAutomatonController.OK = OK
OpenedAutomatonController.Cancel = Cancel
OpenedAutomatonController.SavingAutomaton = Saving automaton to {0}
OpenedAutomatonController.SuggestSavingChanges = Do you want to save {0}?
OpenedAutomatonController.LoadingAutomaton = Loading automaton from {0}
OpenedAutomatonController.FindFileAutomatonSerializer.IllegalArgumentException = Unknown file extension {0}} of {1}}
OpenedAutomatonController.LoadAsync.RuntimeException = Unable to load automaton from {0}
OpenedAutomatonController.SaveAsync.RuntimeException = Unable to save automaton to {0}

ExecutorController.Executor.Status.Accepted = Input accepted
ExecutorController.Executor.Status.Rejected = Input rejected
ExecutorController.Executor.Status.Frozen = Execution has been frozen
ExecutorController.Executor.Status.Running = The automaton didn't halt in one second
ExecutorController.ExecutionResult = Execution result
ExecutorController.Error.ExecutionFailed = Execution failed

FiniteAutomaton.NAME = finite automaton
MealyMachine.NAME = Mealy machine
MooreMachine.NAME = Moore machine

MultiTapeTuringMachine.NAME = multi-tape Turing machine
MultiTapeTuringMachine.IllegalTapesArgument = Illegal `tapes` argument when creating `MultiTapeTuringMachine`

MultiTrackTuringMachine.NAME = multi-track Turing machine
MultiTrackTuringMachine.IllegalTracksArgument = Illegal `tracks` argument when creating `MultiTrackTuringMachine`

PushdownAutomaton.NAME = pushdown automaton
PushDownAutomaton.IllegalStacksArgument = Illegal `stacks` argument when creating `PushdownAutomaton`

RegisterAutomaton.NAME = register automaton
RegisterAutomaton.IllegalRegistersArgument = Illegal `registers` argument when creating `RegisterAutomaton`

TuringMachine.NAME = Turing machine
TuringMachine.IllegalTapeArgument = Illegal `tape` argument when creating `TuringMachine`

TuringMachineWithRegisters.NAME = Turing machine with registers
TuringMachineWithRegisters.IllegalRegistersArgument = Illegal `registers` argument when creating `TuringMachineWithRegisters`
TuringMachineWithRegisters.IllegalTapeArgument = Illegal `tape` argument when creating `TuringMachineWithRegisters`

MultiTapeTuringMachineFactory.DisplayName.NumberOfTapes = Number of tapes
MultiTrackTuringMachineFactory.DisplayName.NumberOfTracks = Number of tracks
PushdownAutomatonFactory.DisplayName.NumberOfStacks = Number of stacks
RegisterAutomatonFactory.DisplayName.NumberOfRegisters = Number of registers
TuringMachineWithRegistersFactory.DisplayName.NumberOfRegisters = Number of registers

Register.NAME = Register
Register.RegisterDescriptor.ExpectedValue = Expected value
Register.RegisterDescriptor.NewValue = New value

Stack.NAME = Stack
Stack.StackDescriptor.ExpectedChar = Expected char
Stack.StackDescriptor.PushedString = Pushed string
Stack.StackDescriptor.AcceptByEmptyStack = Accept by empty stack

AbstractOutput.OutputChar = Output char
MealyOutput.NAME = Mealy output
MooreOutput.NAME = Moore output

InputTape.NAME = Input tape
InputTapeDescriptor.ExpectedChar = Expected char

MultiTrackTapeDescriptor.DisplayName.Tape = Tape
MultiTrackTapeDescriptor.DisplayName.Multi-trackTape = Multi-track tape
MultiTrackTapeDescriptor.ExpectedChar = Expected char{0, number, int}
MultiTrackTapeDescriptor.HeadMoveDirection = Head move
MultiTrackTapeDescriptor.NewChar = New char{0, number, int}

Track.CurrentProperty = current

AutomatonDescriptionProvider.Deterministic = deterministic
AutomatonDescriptionProvider.Nondeterministic = nondeterministic
AutomatonDescriptionProvider.EpsilonPartBinding.With = with
AutomatonDescriptionProvider.EpsilonPartBinding.Without = without
AutomatonDescriptionProvider.EpsilonPartBinding.EpsilonTransitions =  epsilon transitions

ProblemDetector.ADD_INIT_STATE_MESSAGE = Add initial state
ProblemDetector.ADD_FINAL_STATE_MESSAGE = Add final state
ProblemDetector.REMOVE_TRANSITIONS_FROM_FINAL_STATES_MESSAGE = Remove transitions from final states

SteppingStrategy.StepByState = Step by state
SteppingStrategy.StepByClosure = Step by closure